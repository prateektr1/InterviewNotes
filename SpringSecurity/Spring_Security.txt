
You tube link : https://www.youtube.com/watch?v=DhBqC_Vy28o&list=PLyHJZXNdCXseGWynh6MlMrC_CmV0dR8mF&index=2
Spring Security Secures our application using authorization and authentication

The first step to add spring security in our application is to add the following dependency

<artifactId> spring-boot-starter-security </artifactId>

WebSecurityConfigAdapter class is responsible for imparting security to Spring Boot application

Basic Authentication in Spring Security is done using Authentication manager.

We can use this method although this is not a very good way , we can define these 2 props in properties file 

spring.security.user.name=cat
spring.security.user.password=cat

THis way we can define our own username and password and avoid the logs or spring to generate password

Although the above method is depracated , the websecurity configadapter is depracated in spring 5.4

Now the same task happens via creation of beans whose examples have been given below

@Configuration
public class SecurityConfiguration {

    @Bean
    public SecurityFilterChain filterChain(HttpSecurity http) throws Exception {
        http
            .authorizeHttpRequests((authz) -> authz
                .anyRequest().authenticated()
            )
            .httpBasic(withDefaults());
        return http.build();
    }

}


@Configuration
public class SecurityConfiguration {

    @Bean
    public WebSecurityCustomizer webSecurityCustomizer() {
        return (web) -> web.ignoring().antMatchers("/ignore1", "/ignore2");
    }

}

Also read this article for more info

https://spring.io/blog/2022/02/21/spring-security-without-the-websecurityconfigureradapter

================================================================================================================

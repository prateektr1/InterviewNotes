NO Kafka server can run without a zookeeper server , it is mandatory to run the zookeeper server

Apache Kafka is a publish subscribed based fault tolerant messaging system , it is fast , scalable and distributed by design

Differences between Active MQ/Rabbit MQ and Kafka

kafka is based upon pub sub (publish subscribe model), Apache kafka allows publishing and subscribing
to stream of records/ Active MQ is based upon PTP messaging ( Point to Point messaging system)

Kafka is written in Java and scala / Active MQ is written in Java , Rabbit MQ is writeen in erlang

Kafka mostly deals with large amount of data/ Rabbit mq deals with small amount of data

We use kafka for high performance monitoring and where losing messages is not important / Use them for exactly once delivery and for valuing messages

When you can manage to lose messages go for kafka when you cant manage to lose go for Rabbit MQ

Kafka has a higher throughput as it does no wait for acknowledgement from the broker , so brokers can write messages at a very high rate/
Active MQ or Rabbit mq have lower throughput as each delivery state is maintained

kafka can assure that it can preserve the order in which messages were sent/ Active MQ or Rabbit MQ cant assure the order of messages to remain same

In Kafka there are no fundamental filters at broker level so it needs to be done by consumers or apps/
Work of filtering is done JMS API message selector in Rabbit MQ

Kafka is Pull type messaging platform where it pulls messages from broker/
Push Type messaging platform wherein providers push message to consumers

How does Kafka maintains ordering of messages

Kafka maintains order within a single partition by assigning a unique offset to each message . This guarantees sequential message appending within that partition. However, when we scale up and use multiple partitions, maintaining a global order becomes complex.

In kafka message retention is policy based , kafka messages are forever saved untill the retention time expires/
In rabbit mq message retention is acknowledgement based , these messages are removed from the queue once they are processed and acknowledged

For massive high data kafka is used / For simple use cases when we rabbit/active mq

In kafka it is the responsibility of consumers to consume the messages/
In active mq or rabbit mq it is responsibility of producers to ensure delivery of messages

kafka is scalable and available because of replication of partitons/
In rabbit mq there is no chance of horizontal scalibility and replication

In kafka performance remains good even if new consumers keep getting added, 1 million messages per second/
In active MQ or Rabbit MQ performance slows down as number of consumers increase 4k-10k messages per second

kafka supports only aysnc messages/ Rabbit MQ or Active MQ supports both types of messages



